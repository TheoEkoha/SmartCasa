/* eslint-disable react/no-unknown-property */

import { useContext, useMemo } from 'react';
import { getPlatform } from "../../utils";
import { connectModalContext } from "../context";
import MainPanelHeader from "./MainPanelHeader";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
const CardItem = ({
  icon,
  title,
  desc,
  link,
  onClick
}) => {
  const {
    prefixCls
  } = useContext(connectModalContext);
  const content = /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx("div", {
      className: `${prefixCls}-card-icon`,
      children: icon
    }), /*#__PURE__*/_jsxs("div", {
      className: `${prefixCls}-card-content`,
      children: [/*#__PURE__*/_jsx("div", {
        className: `${prefixCls}-card-title`,
        children: title
      }), /*#__PURE__*/_jsx("div", {
        className: `${prefixCls}-card-description`,
        children: desc
      })]
    })]
  });
  return link ? /*#__PURE__*/_jsx("a", {
    className: `${prefixCls}-card-item`,
    target: "_blank",
    href: link,
    rel: "noreferrer",
    children: content
  }) : /*#__PURE__*/_jsx("div", {
    className: `${prefixCls}-card-item`,
    onClick: onClick,
    children: content
  });
};
const WalletCard = () => {
  const {
    prefixCls,
    selectedWallet,
    updatePanelRoute,
    localeMessage,
    getMessage
  } = useContext(connectModalContext);
  const selectedExtension = useMemo(() => selectedWallet?.extensions ? selectedWallet.extensions.find(item => item.key === getPlatform()) : undefined, [selectedWallet?.extensions]);
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(MainPanelHeader, {
      title: getMessage(localeMessage.walletCardPanelTitle, {
        selectedWalletName: selectedWallet.name
      })
    }), /*#__PURE__*/_jsxs("div", {
      className: `${prefixCls}-card-list`,
      children: [selectedExtension && /*#__PURE__*/_jsx(CardItem, {
        link: selectedExtension.link,
        icon: typeof selectedExtension.browserIcon === 'string' ? /*#__PURE__*/_jsx("img", {
          alt: "selected extension browser icon",
          src: selectedExtension.browserIcon
        }) : selectedExtension.browserIcon,
        title: getMessage(localeMessage.walletCardExtensionTitle, {
          selectedWalletName: selectedWallet.name,
          selectedExtensionBrowserName: selectedExtension.browserName
        }),
        desc: selectedExtension.description
      }), selectedWallet?.app && /*#__PURE__*/_jsx(CardItem, {
        icon: typeof selectedWallet.icon === 'string' ? /*#__PURE__*/_jsx("img", {
          alt: "selected wallet icon",
          src: selectedWallet.icon
        }) : selectedWallet.icon,
        title: getMessage(localeMessage.walletCardAppTitle, {
          selectedWalletName: selectedWallet.name
        }),
        desc: localeMessage.walletCardAppDesc,
        onClick: () => {
          updatePanelRoute('downloadQrCode');
        }
      }), /*#__PURE__*/_jsxs("div", {
        children: [/*#__PURE__*/_jsx("div", {
          className: `${prefixCls}-card-list-tips-title`,
          children: localeMessage.getWalletTipsTitle
        }), /*#__PURE__*/_jsx("div", {
          className: `${prefixCls}-card-list-tips-description`,
          children: localeMessage.getWalletTipsDesc
        })]
      })]
    })]
  });
};
export default WalletCard;