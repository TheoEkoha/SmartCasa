import React, { useCallback } from 'react';
import { Badge, Button } from 'antd';
import { connectModalContext } from "../context";
import { jsx as _jsx } from "react/jsx-runtime";
const PluginTag = ({
  wallet
}) => {
  const [extensionInstalled, setExtensionInstalled] = React.useState(false);
  const {
    getMessage,
    localeMessage,
    prefixCls
  } = React.useContext(connectModalContext);
  const judgeExtensionInstalled = useCallback(async () => {
    const hasWalletReady = await wallet.hasWalletReady?.();
    if (hasWalletReady) {
      const hasInstalled = await wallet.hasExtensionInstalled?.();
      setExtensionInstalled(!!hasInstalled);
    }
  }, [wallet]);
  React.useEffect(() => {
    judgeExtensionInstalled();
  }, [judgeExtensionInstalled]);
  return wallet.hasExtensionInstalled ? /*#__PURE__*/_jsx(Badge, {
    dot: extensionInstalled,
    color: "#52c41a",
    children: /*#__PURE__*/_jsx(Button, {
      className: `${prefixCls}-plugin-tag`,
      size: "small",
      disabled: !extensionInstalled,
      children: getMessage(localeMessage.walletPanelPlugin)
    })
  }) : null;
};
export default PluginTag;