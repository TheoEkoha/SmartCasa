import React from 'react';
import { devUseWarning } from '@ant-design/web3-common';
import { ConfigProvider, Modal } from 'antd';
import classNames from 'classnames';
import ModalPanel from "./components/ModalPanel";
import useMode from "./hooks/useMode";
import { useStyle } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
export * from "./interface";
export const ConnectModal = props => {
  // eslint-disable-next-line @typescript-eslint/no-unused-vars, unused-imports/no-unused-vars
  const {
    title,
    footer,
    open,
    className,
    mode,
    rootClassName,
    onCancel,
    ...restProps
  } = props;
  const {
    getPrefixCls
  } = React.useContext(ConfigProvider.ConfigContext);
  const {
    isSimple
  } = useMode(mode);

  // Style
  const prefixCls = getPrefixCls('web3-connect-modal');
  const {
    wrapSSR,
    hashId
  } = useStyle(prefixCls);

  // Warning for deprecated usage
  const warning = devUseWarning('ConnectModal');
  warning.deprecated(!('groupOrder' in restProps), 'groupOrder', 'group={{groupOrder: ()=> {}}}');
  return wrapSSR( /*#__PURE__*/_jsx(Modal, {
    footer: null,
    width: isSimple ? 380 : 797,
    ...restProps,
    className: classNames(prefixCls, className, hashId),
    rootClassName: classNames(`${prefixCls}-root`, rootClassName),
    open: open,
    onCancel: e => {
      onCancel?.(e);
    },
    children: /*#__PURE__*/_jsx(ModalPanel, {
      ...props
    })
  }));
};
ConnectModal.displayName = 'ConnectModal';
ConnectModal.ModalPanel = ModalPanel;