import React, { useContext, useMemo } from 'react';
import { ConfigProvider } from 'antd';
import classNames from 'classnames';
import { formatBalance } from "../utils";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export const CryptoPriceBalance = ({
  className,
  style,
  hashId,
  symbol = 'ETH',
  decimals = 18,
  value = 0,
  fixed,
  icon,
  format
}) => {
  const {
    getPrefixCls
  } = useContext(ConfigProvider.ConfigContext);
  const prefixCls = getPrefixCls('web3-crypto-price-balance');
  const displayText = useMemo(() => {
    if (format) {
      return format(formatBalance(value, decimals, fixed), {
        symbol,
        decimals,
        fixed,
        originValue: value
      });
    }
    return `${formatBalance(value, decimals, fixed)} ${symbol}`;
  }, [value, symbol, decimals, fixed, format]);
  return /*#__PURE__*/_jsxs("span", {
    style: style,
    className: classNames(className, hashId, prefixCls),
    children: [icon ? /*#__PURE__*/_jsxs(_Fragment, {
      children: [icon, " "]
    }) : null, displayText]
  });
};
CryptoPriceBalance.displayName = 'CryptoPriceBalance';