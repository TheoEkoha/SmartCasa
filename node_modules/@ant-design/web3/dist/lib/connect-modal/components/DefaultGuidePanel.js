"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _antd = require("antd");
var _classnames = _interopRequireDefault(require("classnames"));
var _context = require("../context");
var _MainPanelHeader = _interopRequireDefault(require("./MainPanelHeader"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const DefaultGuidePanel = props => {
  const {
    localeMessage,
    prefixCls
  } = (0, _react.useContext)(_context.connectModalContext);
  const defaultGuide = {
    title: localeMessage.guideTitle,
    infos: [{
      icon: 'https://mdn.alipayobjects.com/huamei_mutawc/afts/img/A*ApSUSaoUa_sAAAAAAAAAAAAADlrGAQ/original',
      title: localeMessage.guideInfos1Title,
      description: localeMessage.guideInfos1Desc
    }, {
      icon: 'https://mdn.alipayobjects.com/huamei_mutawc/afts/img/A*3lD7QpnbCPcAAAAAAAAAAAAADlrGAQ/original',
      title: localeMessage.guideInfos2Title,
      description: localeMessage.guideInfos2Desc
    }, {
      icon: 'https://mdn.alipayobjects.com/huamei_mutawc/afts/img/A*gTROQqEY_TcAAAAAAAAAAAAADlrGAQ/original',
      title: localeMessage.guideInfos3Title,
      description: localeMessage.guideInfos3Desc
    }],
    moreLink: 'https://ethereum.org/en/wallets/',
    getWalletBtnText: localeMessage.guideInfosGetWalletBtnText,
    moreLinkText: localeMessage.guideInfosMoreLinkText
  };
  const {
    guide = defaultGuide
  } = props;
  if (!guide) {
    return null;
  }
  const renderContent = () => {
    if ( /*#__PURE__*/_react.default.isValidElement(guide)) {
      return guide;
    }
    const {
      title,
      infos
    } = guide;
    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [props.simple && /*#__PURE__*/(0, _jsxRuntime.jsx)(_MainPanelHeader.default, {}), /*#__PURE__*/(0, _jsxRuntime.jsx)("h2", {
        className: `${prefixCls}-guide-title`,
        children: title
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: `${prefixCls}-guide-list`,
        children: infos.map(info => {
          return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
            className: `${prefixCls}-guide-item`,
            children: [typeof info.icon === 'string' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Avatar, {
              className: `${prefixCls}-guide-item-icon`,
              shape: "square",
              src: info.icon
            }) : info.icon, /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
              className: `${prefixCls}-guide-item-content`,
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("h3", {
                className: `${prefixCls}-guide-item-title`,
                children: info.title
              }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
                className: `${prefixCls}-guide-item-description`,
                children: info.description
              })]
            })]
          }, info.title?.toString());
        })
      })]
    });
  };
  const {
    moreLinkText = defaultGuide.moreLinkText
  } = guide;
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: (0, _classnames.default)(`${prefixCls}-guide-panel`, {
      [`${prefixCls}-simple-guide-panel`]: props.simple
    }),
    children: [renderContent(), /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Button, {
      block: true,
      className: `${prefixCls}-more`,
      href: guide?.moreLink,
      target: "_blank",
      size: "large",
      children: moreLinkText
    })]
  });
};
var _default = exports.default = DefaultGuidePanel;