"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChainInfo = void 0;
var _react = _interopRequireWildcard(require("react"));
var _antd = require("antd");
var _PayPanelContext = require("./PayPanelContext");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const ChainInfo = ({
  chainId
}) => {
  const {
    getPrefixCls
  } = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext);
  const {
    supportedChains
  } = (0, _react.useContext)(_PayPanelContext.PayPanelContext);
  const prefixCls = getPrefixCls('web3-pay-panel');
  const returnChainInfo = supportedChains.find(chain => chain.chain.id === Number(chainId));
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
    className: `${prefixCls}-chainItem`,
    children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: `${prefixCls}-chainInfo`,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
        className: `${prefixCls}-icon`,
        children: returnChainInfo?.chain.icon
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        children: /*#__PURE__*/(0, _jsxRuntime.jsx)("span", {
          children: returnChainInfo?.chain.name
        })
      })]
    }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: `${prefixCls}-gasInfo`,
      children: returnChainInfo?.extra
    })]
  });
};
exports.ChainInfo = ChainInfo;