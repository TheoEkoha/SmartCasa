{
  "version": 3,
  "sources": ["../../thirdweb/src/react/web/wallets/in-app/InAppWalletFormUI.tsx", "../../thirdweb/src/react/web/wallets/in-app/WalletAuth.tsx", "../../thirdweb/src/react/core/hooks/wallets/useAddConnectedWallet.ts", "../../thirdweb/src/react/web/wallets/in-app/InAppWalletConnectUI.tsx"],
  "sourcesContent": ["\"use client\";\nimport { useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { iconSize } from \"../../../core/design-system/index.js\";\nimport { TOS } from \"../../ui/ConnectWallet/Modal/TOS.js\";\nimport { useScreenContext } from \"../../ui/ConnectWallet/Modal/screen.js\";\nimport { PoweredByThirdweb } from \"../../ui/ConnectWallet/PoweredByTW.js\";\nimport type { ConnectLocale } from \"../../ui/ConnectWallet/locale/types.js\";\nimport { Img } from \"../../ui/components/Img.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { ModalTitle } from \"../../ui/components/modalElements.js\";\nimport { ConnectWalletSocialOptions } from \"../shared/ConnectWalletSocialOptions.js\";\nimport type { InAppWalletLocale } from \"../shared/locale/types.js\";\n\nexport type InAppWalletFormUIProps = {\n  select: () => void;\n  inAppWalletLocale: InAppWalletLocale;\n  connectLocale: ConnectLocale;\n  done: () => void;\n  wallet: Wallet<\"inApp\">;\n  goBack?: () => void;\n  size: \"compact\" | \"wide\";\n  meta?: {\n    title?: string;\n    titleIconUrl?: string;\n    showThirdwebBranding?: boolean;\n    termsOfServiceUrl?: string;\n    privacyPolicyUrl?: string;\n    requireApproval?: boolean;\n  };\n  client: ThirdwebClient;\n  chain: Chain | undefined;\n  isLinking?: boolean;\n};\n\n/**\n * @internal\n */\nexport function InAppWalletFormUIScreen(props: InAppWalletFormUIProps) {\n  const isCompact = props.size === \"compact\";\n  const { initialScreen, screen } = useScreenContext();\n  // This is only used when requireApproval is true to accept the TOS\n  const [isApproved, setIsApproved] = useState(false);\n\n  const isInitialScreen =\n    screen === props.wallet && initialScreen === props.wallet;\n\n  const onBack = isInitialScreen && !props.isLinking ? undefined : props.goBack;\n\n  return (\n    <Container\n      fullHeight\n      flex=\"column\"\n      p=\"lg\"\n      animate=\"fadein\"\n      style={{\n        minHeight: \"250px\",\n      }}\n    >\n      {isCompact &&\n        (isInitialScreen ? (\n          <>\n            <ModalHeader\n              onBack={onBack}\n              leftAligned={!props.isLinking}\n              title={\n                <>\n                  {!props.meta?.titleIconUrl ? null : (\n                    <Img\n                      src={props.meta?.titleIconUrl}\n                      width={iconSize.md}\n                      height={iconSize.md}\n                      client={props.client}\n                    />\n                  )}\n                  <ModalTitle>\n                    {props.meta?.title ??\n                      props.inAppWalletLocale.emailLoginScreen.title}\n                  </ModalTitle>\n                </>\n              }\n            />\n            <Spacer y=\"lg\" />\n          </>\n        ) : (\n          <ModalHeader onBack={onBack} title={props.inAppWalletLocale.signIn} />\n        ))}\n      <Container\n        expand\n        flex=\"column\"\n        center=\"y\"\n        p={isCompact ? undefined : \"lg\"}\n      >\n        <ConnectWalletSocialOptions\n          {...props}\n          locale={props.inAppWalletLocale}\n          disabled={props.meta?.requireApproval && !isApproved}\n        />\n      </Container>\n\n      {isCompact &&\n        (props.meta?.showThirdwebBranding !== false ||\n          props.meta?.termsOfServiceUrl ||\n          props.meta?.privacyPolicyUrl) && <Spacer y=\"xl\" />}\n      <Container flex=\"column\" gap=\"lg\">\n        <TOS\n          termsOfServiceUrl={props.meta?.termsOfServiceUrl}\n          privacyPolicyUrl={props.meta?.privacyPolicyUrl}\n          locale={props.connectLocale.agreement}\n          requireApproval={props.meta?.requireApproval}\n          onApprove={() => {\n            setIsApproved(!isApproved);\n          }}\n          isApproved={isApproved}\n        />\n\n        {props.meta?.showThirdwebBranding !== false && <PoweredByThirdweb />}\n      </Container>\n    </Container>\n  );\n}\n", "import { Suspense, useRef, useState } from \"react\";\nimport { defineChain } from \"../../../../chains/utils.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { linkProfile } from \"../../../../wallets/in-app/core/wallet/profiles.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport { iconSize } from \"../../../core/design-system/index.js\";\nimport { useAddConnectedWallet } from \"../../../core/hooks/wallets/useAddConnectedWallet.js\";\nimport AllWalletsUI from \"../../ui/ConnectWallet/Modal/AllWalletsUI.js\";\nimport { WalletSelector } from \"../../ui/ConnectWallet/WalletSelector.js\";\nimport type { ConnectLocale } from \"../../ui/ConnectWallet/locale/types.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { WalletImage } from \"../../ui/components/WalletImage.js\";\nimport { Container, ModalHeader } from \"../../ui/components/basic.js\";\nimport { getDefaultWallets } from \"../defaultWallets.js\";\nimport { ErrorState } from \"../shared/ErrorState.js\";\nimport { LoadingScreen } from \"../shared/LoadingScreen.js\";\nimport { LoadingState } from \"../shared/LoadingState.js\";\nimport type { InAppWalletLocale } from \"../shared/locale/types.js\";\n\nexport function WalletAuth(props: {\n  wallet: Wallet<\"inApp\">;\n  client: ThirdwebClient;\n  done: () => void;\n  size: \"compact\" | \"wide\";\n  locale: ConnectLocale;\n  inAppLocale: InAppWalletLocale;\n  onBack: () => void;\n  walletConnect: { projectId?: string } | undefined;\n  meta?: {\n    title?: string;\n    titleIconUrl?: string;\n    showThirdwebBranding?: boolean;\n    termsOfServiceUrl?: string;\n    privacyPolicyUrl?: string;\n  };\n}) {\n  const { wallet, done } = props;\n  const addConnectedWallet = useAddConnectedWallet();\n  const walletToConnect = useRef<Wallet>();\n  const [status, setStatus] = useState<\"loading\" | \"error\" | \"selecting\">(\n    \"selecting\",\n  );\n  const [error, setError] = useState<string | undefined>();\n  const [showAll, setShowAll] = useState<boolean>(false);\n\n  const back = () => {\n    setStatus(\"selecting\");\n    walletToConnect.current = undefined;\n    props.onBack();\n  };\n\n  async function login(walletToLink: Wallet) {\n    setStatus(\"loading\");\n    walletToConnect.current = walletToLink;\n    try {\n      await linkProfile(wallet as Wallet<\"inApp\">, {\n        strategy: \"wallet\",\n        wallet: walletToLink,\n        chain: wallet.getChain() || defineChain(1),\n      }).catch((e) => {\n        setError(e.message);\n        throw e;\n      });\n      addConnectedWallet(walletToLink);\n      done();\n    } catch {\n      setStatus(\"error\");\n    }\n  }\n\n  if (!walletToConnect.current) {\n    if (showAll) {\n      return (\n        <Suspense fallback={<LoadingScreen />}>\n          <AllWalletsUI\n            onBack={() => setShowAll(false)}\n            onSelect={async (newWallet) => {\n              login(newWallet);\n              setShowAll(false);\n            }}\n            client={props.client}\n            connectLocale={props.locale}\n            recommendedWallets={undefined}\n            specifiedWallets={[]}\n            size={props.size}\n            disableSelectionDataReset={true}\n          />\n        </Suspense>\n      );\n    }\n    return (\n      <WalletSelector\n        title={props.locale.connectAWallet}\n        wallets={getDefaultWallets()}\n        selectWallet={async (newWallet) => {\n          login(newWallet);\n        }}\n        onShowAll={() => {\n          setShowAll(true);\n        }}\n        done={() => {}}\n        goBack={back}\n        setModalVisibility={() => {}}\n        client={props.client}\n        connectLocale={props.locale}\n        hideHeader={false}\n        recommendedWallets={undefined}\n        chain={wallet.getChain()}\n        showAllWallets={true}\n        chains={[]}\n        size={props.size}\n        meta={props.meta || {}}\n        walletConnect={props.walletConnect}\n        modalHeader={{ title: props.inAppLocale.linkWallet, onBack: back }}\n        walletIdsToHide={[\"inApp\"]}\n        disableSelectionDataReset={true}\n      />\n    );\n  }\n\n  return (\n    <Container animate=\"fadein\" fullHeight flex=\"column\">\n      <Container p=\"lg\">\n        <ModalHeader title={props.inAppLocale.linkWallet} onBack={back} />\n      </Container>\n\n      <Container\n        px={props.size === \"wide\" ? \"xxl\" : \"lg\"}\n        expand\n        flex=\"column\"\n        center=\"y\"\n      >\n        <div>\n          {status === \"error\" ? (\n            <>\n              <ErrorState\n                onTryAgain={() => {\n                  if (!walletToConnect.current) {\n                    throw new Error(\"Failed to connect to unknown wallet\");\n                  }\n                  login(walletToConnect.current);\n                }}\n                title={error || \"Failed to Login\"}\n              />\n              <Spacer y=\"lg\" />\n            </>\n          ) : (\n            <>\n              <LoadingState\n                title=\"Sign in with your wallet\"\n                subtitle=\"A pop-up prompt will appear to sign-in and verify your wallet\"\n                icon={\n                  <WalletImage\n                    id={walletToConnect.current.id ?? \"\"}\n                    size={iconSize.xl}\n                    client={props.client}\n                  />\n                }\n              />\n            </>\n          )}\n        </div>\n      </Container>\n    </Container>\n  );\n}\n", "import { useConnectionManagerCtx } from \"../../providers/connection-manager.js\";\n\n/**\n * A hook to add a connected wallet without setting the active wallet.\n * @returns A function that lets you add a connected wallet.\n * @example\n * ```jsx\n * import { useAddConnectedWallet } from \"thirdweb/react\";\n *\n * const addConnectedWallet = useAddConnectedWallet();\n *\n * // later in your code\n * await addConnectedWallet(wallet);\n * ```\n * @walletConnection\n */\nexport function useAddConnectedWallet() {\n  const manager = useConnectionManagerCtx(\"useAddConnectedWallet\");\n  return manager.handleConnection;\n}\n", "\"use client\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport type { Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport {\n  useSelectionData,\n  useSetSelectionData,\n} from \"../../providers/wallet-ui-states-provider.js\";\nimport { useScreenContext } from \"../../ui/ConnectWallet/Modal/screen.js\";\nimport type { ConnectLocale } from \"../../ui/ConnectWallet/locale/types.js\";\nimport type { ConnectWalletSelectUIState } from \"../shared/ConnectWalletSocialOptions.js\";\nimport { LoadingScreen } from \"../shared/LoadingScreen.js\";\nimport { OTPLoginUI } from \"../shared/OTPLoginUI.js\";\nimport { PassKeyLogin } from \"../shared/PassKeyLogin.js\";\nimport { SocialLogin } from \"../shared/SocialLogin.js\";\nimport { InAppWalletFormUIScreen } from \"./InAppWalletFormUI.js\";\nimport { WalletAuth } from \"./WalletAuth.js\";\nimport { useInAppWalletLocale } from \"./useInAppWalletLocale.js\";\n\n/**\n *\n * @internal\n */\nfunction InAppWalletConnectUI(props: {\n  wallet: Wallet<\"inApp\">;\n  done: () => void;\n  goBack?: () => void;\n  size: \"compact\" | \"wide\";\n  meta?: {\n    title?: string;\n    titleIconUrl?: string;\n    showThirdwebBranding?: boolean;\n    termsOfServiceUrl?: string;\n    privacyPolicyUrl?: string;\n  };\n  client: ThirdwebClient;\n  chain: Chain | undefined;\n  connectLocale: ConnectLocale;\n  isLinking?: boolean;\n  walletConnect: { projectId?: string } | undefined;\n}) {\n  const data = useSelectionData();\n  const setSelectionData = useSetSelectionData();\n  const state = data as ConnectWalletSelectUIState;\n  const localeId = props.connectLocale.id;\n  const locale = useInAppWalletLocale(localeId);\n  const { initialScreen } = useScreenContext();\n\n  if (!locale) {\n    return <LoadingScreen />;\n  }\n\n  // if the the modal starts out with the wallet's connect ui instead of wallet selector - going back to main screen requires staying on the same component and clearing the selection data\n  // otherwise, we go back to the wallet selector by calling props.goBack\n  const goBackToMain =\n    initialScreen === props.wallet\n      ? () => {\n          setSelectionData({});\n        }\n      : props.goBack;\n\n  const done = () => {\n    props.done();\n    setSelectionData({});\n  };\n\n  const otpUserInfo = state?.emailLogin\n    ? { email: state.emailLogin }\n    : state?.phoneLogin\n      ? { phone: state.phoneLogin }\n      : undefined;\n\n  if (otpUserInfo) {\n    return (\n      <OTPLoginUI\n        userInfo={otpUserInfo}\n        locale={locale}\n        done={done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n        chain={props.chain}\n        client={props.client}\n        size={props.size}\n        isLinking={props.isLinking}\n      />\n    );\n  }\n\n  if (state?.passkeyLogin) {\n    return (\n      <PassKeyLogin\n        locale={props.connectLocale}\n        wallet={props.wallet}\n        done={done}\n        onBack={goBackToMain}\n        chain={props.chain}\n        client={props.client}\n        size={props.size}\n        isLinking={props.isLinking}\n      />\n    );\n  }\n\n  if (state?.walletLogin) {\n    return (\n      <WalletAuth\n        meta={props.meta}\n        inAppLocale={locale}\n        walletConnect={props.walletConnect}\n        wallet={props.wallet}\n        client={props.client}\n        size={props.size}\n        done={done}\n        onBack={goBackToMain || (() => setSelectionData({}))}\n        locale={props.connectLocale}\n      />\n    );\n  }\n\n  if (state?.socialLogin) {\n    return (\n      <SocialLogin\n        socialAuth={state.socialLogin.type}\n        locale={locale}\n        done={done}\n        goBack={goBackToMain}\n        wallet={props.wallet}\n        state={state}\n        chain={props.chain}\n        client={props.client}\n        size={props.size}\n        connectLocale={props.connectLocale}\n        isLinking={props.isLinking}\n      />\n    );\n  }\n\n  return (\n    <InAppWalletFormUIScreen\n      select={() => {}}\n      connectLocale={props.connectLocale}\n      inAppWalletLocale={locale}\n      done={done}\n      goBack={props.goBack}\n      wallet={props.wallet}\n      client={props.client}\n      meta={props.meta}\n      size={props.size}\n      chain={props.chain}\n      isLinking={props.isLinking}\n    />\n  );\n}\n\nexport default InAppWalletConnectUI;\n"],
  "mappings": "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",
  "names": ["_jsxs", "_Fragment", "_jsx", "import_react", "_jsx", "_jsxs", "_Fragment", "_jsx"]
}
