{
  "version": 3,
  "sources": ["../../thirdweb/src/wallets/injected/mipdStore.ts"],
  "sourcesContent": ["import { type EIP6963ProviderDetail, type Store, createStore } from \"mipd\";\nimport { isBrowser } from \"../../utils/platform.js\";\nimport { METAMASK } from \"../constants.js\";\nimport type { Ethereum } from \"../interfaces/ethereum.js\";\nimport type { WalletId } from \"../wallet-types.js\";\n\ndeclare module \"mipd\" {\n  export interface Register {\n    rdns: WalletId;\n  }\n}\n\n// if we're in the browser -> create the store once immediately\nconst mipdStore: Store | undefined = /* @__PURE__ */ (() =>\n  isBrowser() ? createStore() : undefined)();\n\n/**\n * Get Injected Provider for given wallet by passing a wallet ID (rdns) using [EIP-6963](https://eips.ethereum.org/EIPS/eip-6963) Provider Discovery.\n * @param walletId - The Wallet Id (rdns) to check.\n * @example\n * ```ts\n * import { injectedProvider } from \"thirdweb/wallets\";\n *\n * const metamaskProvider = injectedProvider(\"io.metamask\");\n *\n * if (metamaskProvider) {\n *  console.log(\"Metamask is installed\");\n * }\n * ```\n * @returns The details of the Injected Provider if it exists. `undefined` otherwise.\n * @walletUtils\n */\nexport function injectedProvider(walletId: WalletId): Ethereum | undefined {\n  const injectedProviderDetail = getInstalledWalletProviders().find(\n    (p) => p.info.rdns === walletId,\n  );\n\n  return injectedProviderDetail?.provider as Ethereum | undefined;\n}\n\n/**\n * Get Injected Provider Details for given wallet ID (rdns)\n * @internal\n */\nfunction getMIPDStore() {\n  if (!mipdStore) {\n    return undefined;\n  }\n  return mipdStore;\n}\n\nexport function getInstalledWalletProviders(): readonly EIP6963ProviderDetail[] {\n  const providers = getMIPDStore()?.getProviders() || [];\n\n  for (const provider of providers) {\n    // Map io.metamask.mobile to io.metamask rdns to fix double entry issue in MetaMask mobile browser\n    if ((provider.info.rdns as string) === \"io.metamask.mobile\") {\n      provider.info.rdns = METAMASK;\n      break;\n    }\n  }\n\n  return providers;\n}\n"],
  "mappings": ";;;;;;;;;;;AAaA,IAAM,aAAgD,MACpD,UAAS,IAAK,YAAW,IAAK,QAAU;AAkBpC,SAAU,iBAAiB,UAAkB;AACjD,QAAM,yBAAyB,4BAA2B,EAAG,KAC3D,CAAC,MAAM,EAAE,KAAK,SAAS,QAAQ;AAGjC,SAAO,iEAAwB;AACjC;AAMA,SAAS,eAAY;AACnB,MAAI,CAAC,WAAW;AACd,WAAO;EACT;AACA,SAAO;AACT;AAEM,SAAU,8BAA2B;AAnD3C;AAoDE,QAAM,cAAY,kBAAY,MAAZ,mBAAgB,mBAAkB,CAAA;AAEpD,aAAW,YAAY,WAAW;AAEhC,QAAK,SAAS,KAAK,SAAoB,sBAAsB;AAC3D,eAAS,KAAK,OAAO;AACrB;IACF;EACF;AAEA,SAAO;AACT;",
  "names": []
}
