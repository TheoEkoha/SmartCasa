{
  "version": 3,
  "sources": ["../../thirdweb/src/react/core/hooks/wallets/useActiveWallet.ts", "../../thirdweb/src/react/web/ui/components/WalletImage.tsx"],
  "sourcesContent": ["import { useSyncExternalStore } from \"react\";\nimport { useConnectionManagerCtx } from \"../../providers/connection-manager.js\";\n\n/**\n * A hook that returns the active wallet\n * @returns The active `Wallet` or `undefined` if no active wallet is set.\n * @example\n * ```jsx\n * import { useActiveWallet } from \"thirdweb/react\";\n *\n * const wallet = useActiveWallet();\n * ```\n * @walletConnection\n */\nexport function useActiveWallet() {\n  const manager = useConnectionManagerCtx(\"useActiveWallet\");\n  const store = manager.activeWalletStore;\n  return useSyncExternalStore(store.subscribe, store.getValue, store.getValue);\n}\n", "\"use client\";\nimport { useEffect, useState } from \"react\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { webLocalStorage } from \"../../../../utils/storage/webStorage.js\";\nimport { getWalletInfo } from \"../../../../wallets/__generated__/getWalletInfo.js\";\nimport { getInstalledWalletProviders } from \"../../../../wallets/injected/mipdStore.js\";\nimport type { WalletId } from \"../../../../wallets/wallet-types.js\";\nimport { radius } from \"../../../core/design-system/index.js\";\nimport { useActiveWallet } from \"../../../core/hooks/wallets/useActiveWallet.js\";\nimport { getLastAuthProvider } from \"../../../core/utils/storage.js\";\nimport { useWalletImage } from \"../../../core/utils/wallet.js\";\nimport {\n  genericWalletIcon,\n  getWalletIcon,\n} from \"../../../core/utils/walletIcon.js\";\nimport { Img } from \"./Img.js\";\n\n/**\n * @internal\n */\nexport function WalletImage(props: {\n  id: WalletId;\n  size: string;\n  client: ThirdwebClient;\n  style?: React.CSSProperties;\n}) {\n  const [image, setImage] = useState<string | undefined>(undefined);\n  const activeWallet = useActiveWallet();\n  useEffect(() => {\n    async function fetchImage() {\n      // show EOA icon for external wallets\n      // show auth provider icon for in-app wallets\n      // show the admin EOA icon for smart\n      const storage = webLocalStorage;\n      const activeEOAId = props.id;\n      let image: string | undefined;\n\n      if (\n        activeEOAId === \"inApp\" &&\n        activeWallet &&\n        (activeWallet.id === \"inApp\" || activeWallet.id === \"smart\")\n      ) {\n        // when showing an active wallet icon - check last auth provider and override the IAW icon\n        const lastAuthProvider = await getLastAuthProvider(storage);\n        image = lastAuthProvider\n          ? getWalletIcon(lastAuthProvider)\n          : genericWalletIcon;\n      } else {\n        const mipdImage = getInstalledWalletProviders().find(\n          (x) => x.info.rdns === activeEOAId,\n        )?.info.icon;\n\n        if (mipdImage) {\n          image = mipdImage;\n        } else {\n          image = await getWalletInfo(activeEOAId, true);\n        }\n      }\n\n      setImage(image);\n    }\n    fetchImage();\n  }, [props.id, activeWallet]);\n\n  if (image) {\n    return (\n      <Img\n        src={image}\n        width={props.size}\n        height={props.size}\n        loading=\"eager\"\n        client={props.client}\n        style={{\n          borderRadius: radius.md,\n          ...props.style,\n        }}\n      />\n    );\n  }\n\n  return (\n    <WalletImageQuery id={props.id} size={props.size} client={props.client} />\n  );\n}\n\nfunction WalletImageQuery(props: {\n  id: WalletId;\n  size: string;\n  client: ThirdwebClient;\n}) {\n  const walletImage = useWalletImage(props.id);\n\n  if (walletImage.isFetched && !walletImage.data) {\n    return (\n      <Img\n        client={props.client}\n        src={genericWalletIcon}\n        width={props.size}\n        height={props.size}\n      />\n    );\n  }\n\n  return (\n    <Img\n      client={props.client}\n      src={walletImage.isLoading ? undefined : walletImage.data}\n      fallbackImage={genericWalletIcon}\n      width={props.size}\n      height={props.size}\n      loading=\"eager\"\n      style={{\n        borderRadius: radius.md,\n      }}\n    />\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAqC;AAc/B,SAAU,kBAAe;AAC7B,QAAM,UAAU,wBAAwB,iBAAiB;AACzD,QAAM,QAAQ,QAAQ;AACtB,aAAO,mCAAqB,MAAM,WAAW,MAAM,UAAU,MAAM,QAAQ;AAC7E;;;;ACjBA,IAAAA,gBAAoC;AAmB9B,SAAU,YAAY,OAK3B;AACC,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAA6B,MAAS;AAChE,QAAM,eAAe,gBAAe;AACpC,+BAAU,MAAK;AACb,mBAAe,aAAU;AA7B7B;AAiCM,YAAM,UAAU;AAChB,YAAM,cAAc,MAAM;AAC1B,UAAIC;AAEJ,UACE,gBAAgB,WAChB,iBACC,aAAa,OAAO,WAAW,aAAa,OAAO,UACpD;AAEA,cAAM,mBAAmB,MAAM,oBAAoB,OAAO;AAC1D,QAAAA,SAAQ,mBACJ,cAAc,gBAAgB,IAC9B;MACN,OAAO;AACL,cAAM,aAAY,iCAA2B,EAAG,KAC9C,CAAC,MAAM,EAAE,KAAK,SAAS,WAAW,MADlB,mBAEf,KAAK;AAER,YAAI,WAAW;AACb,UAAAA,SAAQ;QACV,OAAO;AACL,UAAAA,SAAQ,MAAM,cAAc,aAAa,IAAI;QAC/C;MACF;AAEA,eAASA,MAAK;IAChB;AACA,eAAU;EACZ,GAAG,CAAC,MAAM,IAAI,YAAY,CAAC;AAE3B,MAAI,OAAO;AACT,eACE,mBAAAC,KAAC,KAAG,EACF,KAAK,OACL,OAAO,MAAM,MACb,QAAQ,MAAM,MACd,SAAQ,SACR,QAAQ,MAAM,QACd,OAAO;MACL,cAAc,OAAO;MACrB,GAAG,MAAM;MACV,CAAA;EAGP;AAEA,aACE,mBAAAA,KAAC,kBAAgB,EAAC,IAAI,MAAM,IAAI,MAAM,MAAM,MAAM,QAAQ,MAAM,OAAM,CAAA;AAE1E;AAEA,SAAS,iBAAiB,OAIzB;AACC,QAAM,cAAc,eAAe,MAAM,EAAE;AAE3C,MAAI,YAAY,aAAa,CAAC,YAAY,MAAM;AAC9C,eACE,mBAAAA,KAAC,KAAG,EACF,QAAQ,MAAM,QACd,KAAK,mBACL,OAAO,MAAM,MACb,QAAQ,MAAM,KAAI,CAAA;EAGxB;AAEA,aACE,mBAAAA,KAAC,KAAG,EACF,QAAQ,MAAM,QACd,KAAK,YAAY,YAAY,SAAY,YAAY,MACrD,eAAe,mBACf,OAAO,MAAM,MACb,QAAQ,MAAM,MACd,SAAQ,SACR,OAAO;IACL,cAAc,OAAO;IACtB,CAAA;AAGP;",
  "names": ["import_react", "image", "_jsx"]
}
