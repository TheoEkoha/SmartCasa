{
  "version": 3,
  "sources": ["../../thirdweb/src/wallets/in-app/core/wallet/profiles.ts"],
  "sourcesContent": ["import type { Wallet } from \"../../../interfaces/wallet.js\";\nimport type {\n  MultiStepAuthArgsType,\n  Profile,\n  SingleStepAuthArgsType,\n} from \"../authentication/types.js\";\n\n/**\n * Gets the linked profiles for the provided wallet.\n * This method is only available for in-app wallets.\n *\n * @returns An array of accounts user profiles linked to the current wallet.\n *\n * @example\n * ```ts\n * import { inAppWallet } from \"thirdweb/wallets\";\n *\n * const wallet = inAppWallet();\n * wallet.connect({ strategy: \"google\" });\n *\n * const profiles = await getProfiles(wallet);\n *\n * console.log(profiles[0].type);\n * console.log(profiles[0].details.email);\n * ```\n * @wallet\n */\nexport async function getProfiles(wallet: Wallet<\"inApp\">) {\n  if (wallet.id !== \"inApp\") {\n    throw new Error(\"Multi-auth currently only supports in-app wallets\");\n  }\n\n  return (\n    wallet as unknown as { getProfiles: () => Promise<Profile[]> }\n  ).getProfiles();\n}\n\n/**\n * Connects a new profile (authentication method) to the current user.\n * The connected profile can be any valid in-app wallet including email, phone, passkey, etc.\n * The inputs mirror those used when authenticating normally.\n *\n * **When a profile is linked to the account, that profile can then be used to sign into the account.**\n *\n * This method is only available for in-app wallets.\n *\n * @param wallet - The wallet to link an additional profile to.\n * @param auth - The authentications options to add the new profile.\n * @returns A promise that resolves to the currently linked profiles when the connection is successful.\n * @throws If the connection fails, if the profile is already linked to the account, or if the profile is already associated with another account.\n *\n * @example\n * ```ts\n * const wallet = inAppWallet();\n *\n * await wallet.connect({ strategy: \"google\" });\n * const profiles = await linkProfile(wallet, { strategy: \"discord\" });\n * ```\n * @wallet\n */\nexport async function linkProfile(\n  wallet: Wallet<\"inApp\">,\n  auth: MultiStepAuthArgsType | SingleStepAuthArgsType,\n): Promise<Profile[]> {\n  if (wallet.id !== \"inApp\") {\n    throw new Error(\"Multi-auth currently only supports in-app wallets\");\n  }\n\n  return (\n    wallet as unknown as {\n      linkProfile: (authOptions: typeof auth) => Promise<Profile[]>;\n    }\n  ).linkProfile(auth);\n}\n"],
  "mappings": ";AA2BA,eAAsB,YAAY,QAAuB;AACvD,MAAI,OAAO,OAAO,SAAS;AACzB,UAAM,IAAI,MAAM,mDAAmD;EACrE;AAEA,SACE,OACA,YAAW;AACf;AAyBA,eAAsB,YACpB,QACA,MAAoD;AAEpD,MAAI,OAAO,OAAO,SAAS;AACzB,UAAM,IAAI,MAAM,mDAAmD;EACrE;AAEA,SACE,OAGA,YAAY,IAAI;AACpB;",
  "names": []
}
