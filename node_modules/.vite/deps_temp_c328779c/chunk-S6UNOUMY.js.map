{
  "version": 3,
  "sources": ["../../thirdweb/src/react/web/wallets/shared/ConnectWalletSocialOptions.tsx", "../../thirdweb/src/wallets/ecosystem/get-ecosystem-wallet-auth-options.ts", "../../thirdweb/src/react/web/wallets/in-app/validateEmail.ts", "../../thirdweb/src/react/web/wallets/shared/oauthSignIn.ts", "../../thirdweb/src/react/web/wallets/in-app/useInAppWalletLocale.ts", "../../thirdweb/src/react/web/wallets/shared/locale/getConnectLocale.ts"],
  "sourcesContent": ["\"use client\";\nimport styled from \"@emotion/styled\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useMemo, useState } from \"react\";\nimport type { Chain } from \"../../../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { webLocalStorage } from \"../../../../utils/storage/webStorage.js\";\nimport { getEcosystemWalletAuthOptions } from \"../../../../wallets/ecosystem/get-ecosystem-wallet-auth-options.js\";\nimport { isEcosystemWallet } from \"../../../../wallets/ecosystem/is-ecosystem-wallet.js\";\nimport type { Profile } from \"../../../../wallets/in-app/core/authentication/types.js\";\nimport { linkProfile } from \"../../../../wallets/in-app/core/wallet/profiles.js\";\nimport { loginWithOauthRedirect } from \"../../../../wallets/in-app/web/lib/auth/oauth.js\";\nimport type { Account, Wallet } from \"../../../../wallets/interfaces/wallet.js\";\nimport {\n  type AuthOption,\n  type SocialAuthOption,\n  socialAuthOptions,\n} from \"../../../../wallets/types.js\";\nimport type { EcosystemWalletId } from \"../../../../wallets/wallet-types.js\";\nimport { useCustomTheme } from \"../../../core/design-system/CustomThemeProvider.js\";\nimport {\n  fontSize,\n  iconSize,\n  spacing,\n} from \"../../../core/design-system/index.js\";\nimport { setLastAuthProvider } from \"../../../core/utils/storage.js\";\nimport {\n  emailIcon,\n  getWalletIcon,\n  passkeyIcon,\n  phoneIcon,\n  socialIcons,\n} from \"../../../core/utils/walletIcon.js\";\nimport { useSetSelectionData } from \"../../providers/wallet-ui-states-provider.js\";\nimport { WalletTypeRowButton } from \"../../ui/ConnectWallet/WalletTypeRowButton.js\";\nimport { Img } from \"../../ui/components/Img.js\";\nimport { Spacer } from \"../../ui/components/Spacer.js\";\nimport { TextDivider } from \"../../ui/components/TextDivider.js\";\nimport { Container } from \"../../ui/components/basic.js\";\nimport { Button } from \"../../ui/components/buttons.js\";\nimport { InputSelectionUI } from \"../in-app/InputSelectionUI.js\";\nimport { validateEmail } from \"../in-app/validateEmail.js\";\nimport { LoadingScreen } from \"./LoadingScreen.js\";\nimport type { InAppWalletLocale } from \"./locale/types.js\";\nimport { openOauthSignInWindow } from \"./oauthSignIn.js\";\n\nexport type ConnectWalletSelectUIState =\n  | undefined\n  | {\n      emailLogin?: string;\n      phoneLogin?: string;\n      socialLogin?: {\n        type: SocialAuthOption;\n        connectionPromise: Promise<Account | Profile[]>;\n      };\n      passkeyLogin?: boolean;\n      walletLogin?: boolean;\n    };\n\nconst defaultAuthOptions: AuthOption[] = [\n  \"email\",\n  \"phone\",\n  \"google\",\n  \"apple\",\n  \"facebook\",\n  \"passkey\",\n];\n\nexport type ConnectWalletSocialOptionsProps = {\n  select: () => void;\n  done: () => void;\n  locale: InAppWalletLocale;\n  wallet: Wallet<EcosystemWalletId> | Wallet<\"inApp\">;\n  goBack?: () => void;\n  chain: Chain | undefined;\n  client: ThirdwebClient;\n  size: \"compact\" | \"wide\";\n  isLinking?: boolean;\n  // If true, all options will be disabled. Used for things like requiring TOS approval.\n  disabled?: boolean;\n};\n\n/**\n * @internal\n */\nexport const ConnectWalletSocialOptions = (\n  props: ConnectWalletSocialOptionsProps,\n) => {\n  const locale = props.locale;\n  const { wallet } = props;\n  const setData = useSetSelectionData() as (\n    value: ConnectWalletSelectUIState,\n  ) => void;\n\n  const themeObj = useCustomTheme();\n  const optionalImageMetadata = useMemo(\n    () =>\n      props.wallet.id === \"inApp\"\n        ? props.wallet.getConfig()?.metadata?.image\n        : undefined,\n    [props.wallet],\n  );\n\n  const loginMethodsLabel = {\n    google: locale.signInWithGoogle,\n    facebook: locale.signInWithFacebook,\n    apple: locale.signInWithApple,\n    discord: locale.signInWithDiscord,\n    farcaster: \"Farcaster\",\n    telegram: \"Telegram\",\n  };\n\n  const { data: ecosystemAuthOptions, isLoading } = useQuery({\n    queryKey: [\"auth-options\", wallet.id],\n    queryFn: async () => {\n      if (isEcosystemWallet(wallet)) {\n        return getEcosystemWalletAuthOptions(wallet.id);\n      }\n      return null;\n    },\n    enabled: isEcosystemWallet(wallet),\n    retry: false,\n  });\n  const authOptions = isEcosystemWallet(wallet)\n    ? ecosystemAuthOptions ?? defaultAuthOptions\n    : wallet.getConfig()?.auth?.options ?? defaultAuthOptions;\n\n  const emailIndex = authOptions.indexOf(\"email\");\n  const isEmailEnabled = emailIndex !== -1;\n  const phoneIndex = authOptions.indexOf(\"phone\");\n  const isPhoneEnabled = phoneIndex !== -1;\n\n  const [manualInputMode, setManualInputMode] = useState<\n    \"email\" | \"phone\" | \"none\" | null\n  >(null);\n\n  const inputMode = useMemo(() => {\n    if (manualInputMode) {\n      return manualInputMode;\n    }\n    if (isEmailEnabled && isPhoneEnabled) {\n      return emailIndex < phoneIndex ? \"email\" : \"phone\";\n    }\n    if (isEmailEnabled) {\n      return \"email\";\n    }\n    if (isPhoneEnabled) {\n      return \"phone\";\n    }\n    return \"none\";\n  }, [isEmailEnabled, isPhoneEnabled, emailIndex, phoneIndex, manualInputMode]);\n\n  if (isEcosystemWallet(wallet) && isLoading) {\n    return <LoadingScreen />;\n  }\n\n  const passKeyEnabled = authOptions.includes(\"passkey\");\n\n  const placeholder =\n    inputMode === \"email\" ? locale.emailPlaceholder : locale.phonePlaceholder;\n  const emptyErrorMessage =\n    inputMode === \"email\" ? locale.emailRequired : locale.phoneRequired;\n\n  let type = \"text\";\n  if (inputMode === \"email\") {\n    type = \"email\";\n  } else if (inputMode === \"phone\") {\n    type = \"tel\";\n  }\n\n  const socialLogins = authOptions.filter((o) =>\n    socialAuthOptions.includes(o as SocialAuthOption),\n  );\n\n  const hasSocialLogins = socialLogins.length > 0;\n  const ecosystemInfo = isEcosystemWallet(wallet)\n    ? {\n        id: wallet.id,\n        partnerId: wallet.getConfig()?.partnerId,\n      }\n    : undefined;\n\n  // Need to trigger login on button click to avoid popup from being blocked\n  const handleSocialLogin = async (strategy: SocialAuthOption) => {\n    const walletConfig = wallet.getConfig();\n    const authMode = walletConfig?.auth?.mode ?? \"popup\";\n    if (\n      walletConfig &&\n      \"auth\" in walletConfig &&\n      authMode !== \"popup\" &&\n      !props.isLinking // We do not support redirects for linking\n    ) {\n      return loginWithOauthRedirect({\n        authOption: strategy,\n        client: props.client,\n        ecosystem: ecosystemInfo,\n        redirectUrl: walletConfig?.auth?.redirectUrl,\n        mode: authMode,\n      });\n    }\n\n    try {\n      const socialLoginWindow = openOauthSignInWindow({\n        authOption: strategy,\n        themeObj,\n        client: props.client,\n        ecosystem: ecosystemInfo,\n      });\n      if (!socialLoginWindow) {\n        throw new Error(\"Failed to open login window\");\n      }\n      const connectOptions = {\n        chain: props.chain,\n        client: props.client,\n        strategy,\n        openedWindow: socialLoginWindow,\n        closeOpenedWindow: (openedWindow: Window) => {\n          openedWindow.close();\n        },\n      };\n\n      const connectPromise = (() => {\n        if (props.isLinking) {\n          if (wallet.id !== \"inApp\") {\n            throw new Error(\"Only in-app wallets support multi-auth\");\n          }\n          return linkProfile(wallet, connectOptions);\n        } else {\n          const connectPromise = wallet.connect(connectOptions);\n          setLastAuthProvider(strategy, webLocalStorage);\n          return connectPromise;\n        }\n      })();\n\n      setData({\n        socialLogin: {\n          type: strategy,\n          connectionPromise: connectPromise,\n        },\n      });\n\n      props.select(); // show Connect UI\n\n      // Note: do not call done() here, it will be called SocialLogin component\n      // we simply trigger the connect and save promise here - its resolution is handled in SocialLogin\n    } catch (e) {\n      console.error(`Error signing in with ${strategy}`, e);\n    }\n  };\n\n  function handlePassKeyLogin() {\n    setData({\n      passkeyLogin: true,\n    });\n    props.select();\n  }\n\n  function handleWalletLogin() {\n    setData({\n      walletLogin: true,\n    });\n    props.select();\n  }\n\n  const showOnlyIcons = socialLogins.length > 2;\n\n  return (\n    <Container\n      flex=\"column\"\n      gap=\"md\"\n      style={{\n        position: \"relative\",\n      }}\n    >\n      {optionalImageMetadata && (\n        <>\n          <Img\n            client={props.client}\n            src={optionalImageMetadata.src}\n            alt={optionalImageMetadata.alt}\n            width={`${optionalImageMetadata.width}`}\n            height={`${optionalImageMetadata.height}`}\n            style={{ margin: \"auto\" }}\n          />\n          <Spacer y=\"xxs\" />\n        </>\n      )}\n      {/* Social Login */}\n      {hasSocialLogins && (\n        <Container\n          flex=\"row\"\n          center=\"x\"\n          gap={socialLogins.length > 4 ? \"xs\" : \"sm\"}\n          style={{\n            justifyContent: \"space-between\",\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${socialLogins.length}, 1fr)`,\n          }}\n        >\n          {socialLogins.map((loginMethod) => {\n            const imgIconSize = (() => {\n              if (!showOnlyIcons) {\n                return iconSize.md;\n              } else {\n                if (socialLogins.length > 4) {\n                  return iconSize.md;\n                }\n                return iconSize.lg;\n              }\n            })();\n\n            return (\n              <SocialButton\n                aria-label={`Login with ${loginMethod}`}\n                data-variant={showOnlyIcons ? \"icon\" : \"full\"}\n                key={loginMethod}\n                variant={\"outline\"}\n                disabled={props.disabled}\n                onClick={() => {\n                  handleSocialLogin(loginMethod as SocialAuthOption);\n                }}\n              >\n                <Img\n                  src={socialIcons[loginMethod as SocialAuthOption]}\n                  width={imgIconSize}\n                  height={imgIconSize}\n                  client={props.client}\n                />\n                {!showOnlyIcons &&\n                  `${socialLogins.length === 1 ? \"Continue with \" : \"\"}${loginMethodsLabel[loginMethod as SocialAuthOption]}`}\n              </SocialButton>\n            );\n          })}\n        </Container>\n      )}\n\n      {props.size === \"wide\" &&\n        hasSocialLogins &&\n        (isEmailEnabled || isPhoneEnabled) && <TextDivider text={locale.or} />}\n\n      {/* Email/Phone Login */}\n      {isEmailEnabled && (\n        <>\n          {inputMode === \"email\" ? (\n            <InputSelectionUI\n              type={type}\n              onSelect={(value) => {\n                setData({ emailLogin: value });\n                props.select();\n              }}\n              placeholder={placeholder}\n              name=\"email\"\n              errorMessage={(input) => {\n                const isValidEmail = validateEmail(input.toLowerCase());\n                if (!isValidEmail) {\n                  return locale.invalidEmail;\n                }\n                return undefined;\n              }}\n              disabled={props.disabled}\n              emptyErrorMessage={emptyErrorMessage}\n              submitButtonText={locale.submitEmail}\n            />\n          ) : (\n            <WalletTypeRowButton\n              client={props.client}\n              icon={emailIcon}\n              onClick={() => {\n                setManualInputMode(\"email\");\n              }}\n              title={locale.emailPlaceholder}\n              disabled={props.disabled}\n            />\n          )}\n        </>\n      )}\n      {isPhoneEnabled && (\n        <>\n          {inputMode === \"phone\" ? (\n            <InputSelectionUI\n              format=\"phone\"\n              type={type}\n              onSelect={(value) => {\n                // removes white spaces and special characters\n                setData({ phoneLogin: value.replace(/[-\\(\\) ]/g, \"\") });\n                props.select();\n              }}\n              placeholder={placeholder}\n              name=\"phone\"\n              errorMessage={(_input) => {\n                // removes white spaces and special characters\n                const input = _input.replace(/[-\\(\\) ]/g, \"\");\n                const isPhone = /^[0-9]+$/.test(input);\n\n                if (!isPhone && isPhoneEnabled) {\n                  return locale.invalidPhone;\n                }\n\n                return undefined;\n              }}\n              disabled={props.disabled}\n              emptyErrorMessage={emptyErrorMessage}\n              submitButtonText={locale.submitEmail}\n            />\n          ) : (\n            <WalletTypeRowButton\n              client={props.client}\n              icon={phoneIcon}\n              onClick={() => {\n                setManualInputMode(\"phone\");\n              }}\n              title={locale.phonePlaceholder}\n              disabled={props.disabled}\n            />\n          )}\n        </>\n      )}\n\n      {passKeyEnabled && (\n        <>\n          <WalletTypeRowButton\n            client={props.client}\n            icon={passkeyIcon}\n            onClick={() => {\n              handlePassKeyLogin();\n            }}\n            title={locale.passkey}\n            disabled={props.disabled}\n          />\n        </>\n      )}\n\n      {props.isLinking && (\n        <>\n          <WalletTypeRowButton\n            client={props.client}\n            icon={getWalletIcon(\"\")}\n            onClick={() => {\n              handleWalletLogin();\n            }}\n            title={locale.linkWallet}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nconst SocialButton = /* @__PURE__ */ styled(Button)({\n  flexGrow: 1,\n  \"&[data-variant='full']\": {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    padding: spacing.md,\n    gap: spacing.sm,\n    fontSize: fontSize.md,\n    fontWeight: 500,\n    transition: \"background-color 0.2s ease\",\n    \"&:active\": {\n      boxShadow: \"none\",\n    },\n  },\n  \"&[data-variant='icon']\": {\n    padding: spacing.sm,\n  },\n});\n", "import { getThirdwebBaseUrl } from \"../../utils/domains.js\";\nimport type { AuthOption } from \"../types.js\";\nimport type { EcosystemWalletId } from \"../wallet-types.js\";\n\n/**\n * Retrieves the specified auth options for a given ecosystem wallet, if any.\n * @param walletId The ecosystem wallet ID.\n * @returns {AuthOption[] | undefined} The auth options for the ecosystem wallet.\n * @internal\n */\nexport async function getEcosystemWalletAuthOptions(\n  walletId: EcosystemWalletId,\n): Promise<AuthOption[] | undefined> {\n  const res = await fetch(\n    `${getThirdwebBaseUrl(\"inAppWallet\")}/api/2024-05-05/ecosystem-wallet`,\n    {\n      headers: {\n        \"x-ecosystem-id\": walletId,\n      },\n    },\n  );\n\n  const data = await res.json();\n\n  if (!data || data.code === \"UNAUTHORIZED\") {\n    throw new Error(\n      data.message ||\n        `Could not find ecosystem wallet with id ${walletId}, please check your ecosystem wallet configuration.`,\n    );\n  }\n\n  return data.authOptions ?? undefined;\n}\n", "// A super basic email validation function that is very forgiving to allow for a wide range emails\nexport function validateEmail(str: string) {\n  // <string> + @ + <string> + . + <string>\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n\n  return emailRegex.test(str.replace(/\\+/g, \"\"));\n}\n", "import type { ThirdwebClient } from \"../../../../client/client.js\";\nimport { getLoginUrl } from \"../../../../wallets/in-app/core/authentication/getLoginPath.js\";\nimport type { InAppWalletSocialAuth } from \"../../../../wallets/in-app/core/wallet/types.js\";\nimport type { Ecosystem } from \"../../../../wallets/in-app/web/types.js\";\nimport type { Theme } from \"../../../core/design-system/index.js\";\n\nfunction getBodyTitle(authOption: InAppWalletSocialAuth) {\n  switch (authOption) {\n    case \"google\":\n      return \"Sign In - Google Accounts\";\n    default:\n      return `Sign In - ${authOption\n        .slice(0, 1)\n        .toUpperCase()}${authOption.slice(1)}`;\n  }\n}\n\nfunction getWidthAndHeight(authOption: InAppWalletSocialAuth) {\n  switch (authOption) {\n    case \"facebook\":\n      return { width: 715, height: 555 };\n    default:\n      return { width: 350, height: 500 };\n  }\n}\n\nfunction getOauthLoginPath(\n  authOption: InAppWalletSocialAuth,\n  client: ThirdwebClient,\n  ecosystem?: Ecosystem,\n) {\n  switch (authOption) {\n    case \"apple\":\n    case \"facebook\":\n    case \"google\":\n    case \"farcaster\":\n    case \"telegram\":\n    case \"discord\":\n      return getLoginUrl({ authOption, client, ecosystem });\n    default:\n      return \"\";\n  }\n}\n\n/**\n * @internal\n */\nexport function openOauthSignInWindow({\n  authOption,\n  themeObj,\n  client,\n  ecosystem,\n}: {\n  authOption: InAppWalletSocialAuth;\n  themeObj: Theme;\n  client: ThirdwebClient;\n  ecosystem?: Ecosystem;\n}) {\n  // open the popup in the center of the screen\n  const { height, width } = getWidthAndHeight(authOption);\n  const top = (window.innerHeight - height) / 2;\n  const left = (window.innerWidth - width) / 2;\n\n  const win = window.open(\n    getOauthLoginPath(authOption, client, ecosystem),\n    undefined,\n    `width=${width}, height=${height}, top=${top}, left=${left}`,\n  );\n  if (win) {\n    const title = getBodyTitle(authOption);\n    win.document.title = title;\n    win.document.body.innerHTML = spinnerWindowHtml;\n    win.document.body.style.background = themeObj.colors.modalBg;\n    win.document.body.style.color = themeObj.colors.accentText;\n  }\n\n  // close it when current window is closed or refreshed\n  if (win) {\n    window.addEventListener(\"beforeunload\", () => {\n      win?.close();\n    });\n  }\n\n  return win;\n}\n\nconst spinnerWindowHtml = `\n<svg class=\"loader\" viewBox=\"0 0 50 50\">\n  <circle\n    cx=\"25\"\n    cy=\"25\"\n    r=\"20\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    stroke-width=\"4\"\n  />\n</svg>\n\n<style>\n  body,\n  html {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .loader {\n    width: 50px;\n    height: 50px;\n    animation: spin 2s linear infinite;\n  }\n\n  .loader circle {\n    animation: loading 1.5s linear infinite;\n  }\n\n  @keyframes loading {\n    0% {\n      stroke-dasharray: 1, 150;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 90, 150;\n      stroke-dashoffset: -124;\n    }\n  }\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n        }\n  }\n</style>\n`;\n", "import { useEffect, useState } from \"react\";\nimport type { LocaleId } from \"../../ui/types.js\";\nimport { getInAppWalletLocale } from \"../shared/locale/getConnectLocale.js\";\nimport type { InAppWalletLocale } from \"../shared/locale/types.js\";\n\n/**\n * @internal\n */\nexport function useInAppWalletLocale(localeId: LocaleId) {\n  const [locale, setLocale] = useState<InAppWalletLocale | undefined>(\n    undefined,\n  );\n\n  // TODO: move this to a useQuery hook\n  // or at the very least dedupe it?\n  useEffect(() => {\n    getInAppWalletLocale(localeId).then((l) => {\n      setLocale(l);\n    });\n  }, [localeId]);\n\n  return locale;\n}\n", "import type { LocaleId } from \"../../../ui/types.js\";\nimport type { InAppWalletLocale } from \"./types.js\";\n\n/**\n * @internal\n */\nexport async function getInAppWalletLocale(\n  localeId: LocaleId,\n): Promise<InAppWalletLocale> {\n  switch (localeId) {\n    case \"es_ES\":\n      return (await import(\"./es.js\")).default;\n    case \"ja_JP\":\n      return (await import(\"./ja.js\")).default;\n    case \"tl_PH\":\n      return (await import(\"./tl.js\")).default;\n    case \"vi_VN\":\n      return (await import(\"./vi.js\")).default;\n    case \"de_DE\":\n      return (await import(\"./de.js\")).default;\n    case \"ko_KR\":\n      return (await import(\"./kr.js\")).default;\n    case \"fr_FR\":\n      return (await import(\"./fr.js\")).default;\n    default:\n      return (await import(\"./en.js\")).default;\n  }\n}\n"],
  "mappings": "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",
  "names": ["_a", "_b", "_jsx", "connectPromise", "_jsxs", "_Fragment", "import_react"]
}
