import {
  Img,
  genericWalletIcon,
  getLastAuthProvider,
  getWalletIcon,
  radius,
  useConnectionManagerCtx,
  useWalletImage
} from "./chunk-4QRAH6K6.js";
import {
  getWalletInfo
} from "./chunk-XLZ33T4S.js";
import {
  getInstalledWalletProviders
} from "./chunk-UXAQ263Y.js";
import {
  webLocalStorage
} from "./chunk-57DFWRZ3.js";
import {
  require_jsx_runtime
} from "./chunk-VMSIDBJW.js";
import {
  require_react
} from "./chunk-JFLQBTWX.js";
import {
  __toESM
} from "./chunk-JE6AHIQZ.js";

// node_modules/thirdweb/dist/esm/react/core/hooks/wallets/useActiveWallet.js
var import_react = __toESM(require_react(), 1);
function useActiveWallet() {
  const manager = useConnectionManagerCtx("useActiveWallet");
  const store = manager.activeWalletStore;
  return (0, import_react.useSyncExternalStore)(store.subscribe, store.getValue, store.getValue);
}

// node_modules/thirdweb/dist/esm/react/web/ui/components/WalletImage.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_react2 = __toESM(require_react(), 1);
function WalletImage(props) {
  const [image, setImage] = (0, import_react2.useState)(void 0);
  const activeWallet = useActiveWallet();
  (0, import_react2.useEffect)(() => {
    async function fetchImage() {
      var _a;
      const storage = webLocalStorage;
      const activeEOAId = props.id;
      let image2;
      if (activeEOAId === "inApp" && activeWallet && (activeWallet.id === "inApp" || activeWallet.id === "smart")) {
        const lastAuthProvider = await getLastAuthProvider(storage);
        image2 = lastAuthProvider ? getWalletIcon(lastAuthProvider) : genericWalletIcon;
      } else {
        const mipdImage = (_a = getInstalledWalletProviders().find((x) => x.info.rdns === activeEOAId)) == null ? void 0 : _a.info.icon;
        if (mipdImage) {
          image2 = mipdImage;
        } else {
          image2 = await getWalletInfo(activeEOAId, true);
        }
      }
      setImage(image2);
    }
    fetchImage();
  }, [props.id, activeWallet]);
  if (image) {
    return (0, import_jsx_runtime.jsx)(Img, { src: image, width: props.size, height: props.size, loading: "eager", client: props.client, style: {
      borderRadius: radius.md,
      ...props.style
    } });
  }
  return (0, import_jsx_runtime.jsx)(WalletImageQuery, { id: props.id, size: props.size, client: props.client });
}
function WalletImageQuery(props) {
  const walletImage = useWalletImage(props.id);
  if (walletImage.isFetched && !walletImage.data) {
    return (0, import_jsx_runtime.jsx)(Img, { client: props.client, src: genericWalletIcon, width: props.size, height: props.size });
  }
  return (0, import_jsx_runtime.jsx)(Img, { client: props.client, src: walletImage.isLoading ? void 0 : walletImage.data, fallbackImage: genericWalletIcon, width: props.size, height: props.size, loading: "eager", style: {
    borderRadius: radius.md
  } });
}

export {
  useActiveWallet,
  WalletImage
};
//# sourceMappingURL=chunk-PBNXW4KC.js.map
